{"version":3,"sources":["board.js","solutiongenerator.js","index.js"],"names":["Square","props","style","backgroundColor","bgColor","borderBottomWidth","bottomBorder","borderRightWidth","rightBorder","className","onClick","onContextMenu","value","Board","r","c","this","grid","bgColors","renderSquare","renderRow","React","Component","SolutionGenerator","puzzle","map","arr","slice","console","log","startTime","performance","now","backtrack","executionTime","solution","length","nextRow","nextCol","digit","isValid","checkRowValid","checkColValid","checkSubgridValid","used","Set","has","add","Math","floor","i","j","SudokuSolver","invalidColor","state","Array","fill","solutionGrid","invalidRows","invalidCols","invalidSubgrids","n","valid","setState","checkEntryValidity","subgridRow","subgridCol","updateValidity","setRowColor","setColColor","setSubgridColor","color","info","generateSolution","infoMessage","toFixed","solutionBgColors","document","title","e","preventDefault","handleClick","handleRightClick","solve","disabled","reset","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.83b7b2ce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n  const style = {\r\n    backgroundColor: props.bgColor,\r\n    borderBottomWidth: props.bottomBorder,\r\n    borderRightWidth: props.rightBorder\r\n  }\r\n  return (\r\n    <button className=\"square\" onClick={() => props.onClick()} onContextMenu={() => props.onContextMenu()} style={style}>\r\n      { props.value }\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(r, c, rightBorder, bottomBorder) {\r\n    return (\r\n    <Square\r\n      value={this.props.grid[r][c]}\r\n      bgColor={this.props.bgColors[r][c]}\r\n      onClick={() => this.props.onClick(r, c)}\r\n      onContextMenu={() => this.props.onContextMenu(r, c)}\r\n      rightBorder={rightBorder}\r\n      bottomBorder={bottomBorder}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderRow(r) {\r\n    const THICK_BORDER = 4\r\n    const THIN_BORDER = 2\r\n    var bottomBorder = THIN_BORDER\r\n    if (r !== 8 && (r + 1) % 3 === 0) {\r\n      bottomBorder = THICK_BORDER\r\n    }\r\n\r\n    return (\r\n      <div className=\"board-row\">\r\n        {this.renderSquare(r, 0, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 1, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 2, THICK_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 3, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 4, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 5, THICK_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 6, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 7, THIN_BORDER, bottomBorder)}\r\n        {this.renderSquare(r, 8, THIN_BORDER, bottomBorder)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        {this.renderRow(0)}\r\n        {this.renderRow(1)}\r\n        {this.renderRow(2)}\r\n        {this.renderRow(3)}\r\n        {this.renderRow(4)}\r\n        {this.renderRow(5)}\r\n        {this.renderRow(6)}\r\n        {this.renderRow(7)}\r\n        {this.renderRow(8)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Board as default};","\r\nexport default class SolutionGenerator {\r\n  constructor(puzzle) {\r\n    this.puzzle = puzzle.map(function(arr) {\r\n      return arr.slice();\r\n    })\r\n  }\r\n\r\n  generateSolution() {\r\n    console.log(\"Solving...\");\r\n\r\n    var startTime = performance.now();\r\n\r\n    // solve\r\n    this.backtrack(0, 0);\r\n\r\n    var endTime = performance.now();\r\n    var executionTime = endTime - startTime\r\n    console.log(`Algorithm execution: ${executionTime} ms`);\r\n    \r\n    return {\r\n      solution: this.puzzle,\r\n      executionTime: executionTime\r\n    };\r\n  }\r\n\r\n  backtrack(r, c) {\r\n    // All squares filled\r\n    if (r >= this.puzzle.length) {\r\n      return true;\r\n    }\r\n\r\n    // Already filled by user, skip to next square\r\n    if (this.puzzle[r][c] != null) {\r\n      let nextRow = r;\r\n      let nextCol = c + 1;\r\n      if (c >= this.puzzle.length) {\r\n        nextRow += 1;\r\n        nextCol = 0;\r\n      }\r\n      if (this.backtrack(nextRow, nextCol)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      // Try all digit candidates\r\n      for (let digit = 1; digit <= 9; digit++) {\r\n        this.puzzle[r][c] = digit;\r\n        if (this.isValid(r, c)) {\r\n          let nextRow = r;\r\n          let nextCol = c + 1;\r\n          if (c >= this.puzzle.length) {\r\n            nextRow += 1;\r\n            nextCol = 0;\r\n          }\r\n          if (this.backtrack(nextRow, nextCol)) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      this.puzzle[r][c] = null;\r\n    }\r\n\r\n  }\r\n\r\n  isValid(r, c) {\r\n    return this.checkRowValid(r) && this.checkColValid(c) && this.checkSubgridValid(r, c);\r\n  }\r\n\r\n  checkRowValid(r) {\r\n    const used = new Set();\r\n    const puzzle = this.puzzle;\r\n    \r\n    for (let c = 0; c < puzzle.length; c++) {\r\n      if (puzzle[r][c] != null) {\r\n        if (used.has(puzzle[r][c])) {\r\n          return false;\r\n        }\r\n        used.add(puzzle[r][c]);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkColValid(c) {\r\n    const used = new Set();\r\n    const puzzle = this.puzzle;\r\n    \r\n    for (let r = 0; r < puzzle.length; r++) {\r\n      if (puzzle[r][c] != null) {\r\n        if (used.has(puzzle[r][c])) {\r\n          return false;\r\n        }\r\n        used.add(puzzle[r][c])\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkSubgridValid(r,c) {\r\n    // To get the top left corner of subgrid\r\n    r = Math.floor(r / 3) * 3;\r\n    c = Math.floor(c / 3) * 3;\r\n    const used = new Set();\r\n    const puzzle = this.puzzle;\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        if (puzzle[r + i][c + j] != null) {\r\n          if (used.has(puzzle[r + i][c + j])) {\r\n            return false;\r\n          }\r\n          used.add(puzzle[r + i][c + j])\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './board.js';\nimport SolutionGenerator from './solutiongenerator.js';\nimport './index.css';\n\nclass SudokuSolver extends React.Component {\n  constructor(props) {\n    super(props);\n    const n = 9\n    this.invalidColor = \"#ff7fe5\";\n\n    this.state = {\n      grid: Array(n).fill(null).map(() => new Array(n).fill(null)),\n      solutionGrid: Array(n).fill(null).map(() => new Array(n).fill(null)),\n      bgColors: Array(n).fill(\"\").map(() => new Array(n).fill(\"\")),\n      invalidRows: Array(n).fill(false),\n      invalidCols: Array(n).fill(false),\n      invalidSubgrids: Array(n / 3).fill(false).map(() => new Array(false).fill(null)),\n      valid: true\n    };\n  }\n\n  handleClick(r,c) {\n    const grid = this.state.grid\n    \n    // Set to 1 if square blank\n    if (grid[r][c] == null) {\n      grid[r][c] = 1\n    // Set back to blank if square already 9\n    } else if (grid[r][c] === 9) {\n      grid[r][c] = null\n    // Increment digit otherwise\n    } else {\n      grid[r][c] = grid[r][c] + 1\n    }\n\n    this.setState({\n      grid: grid,\n    });\n\n    this.checkEntryValidity(r,c);\n  }\n\n  handleRightClick(r,c) {\n    const grid = this.state.grid\n    \n    // Set to 1 if square blank\n    if (grid[r][c] == null) {\n      grid[r][c] = 9\n    // Set back to blank if square already 9\n    } else if (grid[r][c] === 1) {\n      grid[r][c] = null\n    // Increment digit otherwise\n    } else {\n      grid[r][c] = grid[r][c] - 1\n    }\n\n    this.setState({\n      grid: grid,\n    });\n\n    this.checkEntryValidity(r,c);\n  }\n\n  checkEntryValidity(r,c) {\n    // Check if valid along row\n    const invalidRows = this.state.invalidRows;\n    if (this.checkRowValid(r)) {\n      invalidRows[r] = false\n    } else {\n      console.log(\"Invalid row: \" + r);\n      invalidRows[r] = true\n    }\n\n    // Check if valid along column\n    const invalidCols = this.state.invalidCols;\n    if (this.checkColValid(c)) {\n      invalidCols[c] = false\n    } else {\n      console.log(\"Invalid col: \" + c);\n      invalidCols[c] = true\n    }\n\n    // Check if valid within subgrid\n    const subgridRow = Math.floor(r / 3);\n    const subgridCol = Math.floor(c / 3);\n    const invalidSubgrids = this.state.invalidSubgrids;\n    if (this.checkSubgridValid(subgridRow, subgridCol)) {\n      invalidSubgrids[subgridRow][subgridCol] = false\n    } else {\n      console.log(\"Invalid subgrid: \" + subgridRow + \",\" + subgridCol)\n      invalidSubgrids[subgridRow][subgridCol] = true\n    }\n\n    this.setState({\n      invalidRows: invalidRows,\n      invalidCols: invalidCols,\n      invalidSubgrids: invalidSubgrids,\n    });\n\n    this.updateValidity();\n  }\n\n  updateValidity() {\n    const bgColors = Array(9).fill(\"\").map(() => new Array(9).fill(\"\"));\n    const invalidRows = this.state.invalidRows;\n    const invalidCols = this.state.invalidCols;\n    const invalidSubgrids = this.state.invalidSubgrids;\n    var valid = true\n\n    // Set invalid rows and columns\n    for (let i = 0; i < bgColors.length; i++) {\n        if (invalidRows[i] === true) {\n          this.setRowColor(bgColors, i, this.invalidColor);\n          valid = false\n        }\n        if (invalidCols[i] === true) {\n          this.setColColor(bgColors, i, this.invalidColor);\n          valid = false\n        }\n    } \n    \n    // Set invalid subgrids\n    for (let r = 0; r < 3; r++) {\n      for (let c = 0; c < 3; c++) {\n        if (invalidSubgrids[r][c] === true) {\n          this.setSubgridColor(bgColors, r, c, this.invalidColor);\n          valid = false\n        }\n      }\n    }\n\n    this.setState({\n      bgColors: bgColors,\n      valid: valid\n    });\n  }\n  \n  checkRowValid(r) {\n    const used = new Set();\n    const grid = this.state.grid;\n    \n    for (let c = 0; c < grid.length; c++) {\n      if (grid[r][c] != null) {\n        if (used.has(grid[r][c])) {\n          return false;\n        }\n        used.add(grid[r][c]);\n      }\n    }\n    return true;\n  }\n  \n  checkColValid(c) {\n    const used = new Set();\n    const grid = this.state.grid;\n    \n    for (let r = 0; r < grid.length; r++) {\n      if (grid[r][c] != null) {\n        if (used.has(grid[r][c])) {\n          return false;\n        }\n        used.add(grid[r][c])\n      }\n    }\n    return true;\n  }\n  \n  checkSubgridValid(r,c) {\n    // To get the top left corner of subgrid\n    r *= 3;\n    c *= 3;\n    const used = new Set();\n    const grid = this.state.grid;\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (grid[r + i][c + j] != null) {\n          if (used.has(grid[r + i][c + j])) {\n            return false;\n          }\n          used.add(grid[r + i][c + j])\n        }\n      }\n    }\n    return true;\n  }\n\n  setRowColor(bgColors, r, color) {\n    for (let c = 0; c < bgColors.length; c++) {\n      bgColors[r][c] = color;\n    }\n  }\n\n  setColColor(bgColors, c, color) {\n    for (let r = 0; r < bgColors.length; r++) {\n      bgColors[r][c] = color;\n    }\n  }\n\n  setSubgridColor(bgColors, r, c, color) {\n    r *= 3;\n    c *= 3;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        bgColors[r + i][c + j] = color;\n      }\n    }\n  }\n\n  reset() {\n    const n = 9\n    this.setState({\n      grid: Array(n).fill(null).map(() => new Array(n).fill(null)),\n      solutionGrid: Array(n).fill(null).map(() => new Array(n).fill(null)),\n      bgColors: Array(n).fill(\"\").map(() => new Array(n).fill(\"\")),\n      invalidRows: Array(n).fill(false),\n      invalidCols: Array(n).fill(false),\n      invalidSubgrids: Array(n / 3).fill(false).map(() => new Array(false).fill(null)),\n      valid: true,\n      info: \"\"\n    })\n  }\n\n  solve() {\n    if (this.state.valid === true) {\n      this.setState({\n        info: \"Solving...\"\n      });\n\n      const solutionGenerator = new SolutionGenerator(this.state.grid);\n      const solution = solutionGenerator.generateSolution();\n      var executionTime = solution.executionTime\n\n      var infoMessage = \"Solved in \"\n      if (executionTime > 1000) {\n        infoMessage += (executionTime / 1000).toFixed(2) + \" s\"\n      } else {\n        infoMessage += executionTime.toFixed(2) + \" ms\"\n      }\n\n      this.setState({\n        solutionGrid: solution.solution,\n        info: infoMessage\n      });\n    } else {\n      console.log(\"Unable to solve. Invalid puzzle.\");\n    }\n  }\n\n  render() {\n    const solutionBgColors = new Array(9).fill(\"\").map(() => new Array(9).fill(\"\"));\n    document.title = \"Sudoku Solver\"\n    return (\n      <div className=\"solver\">\n        <div className=\"game\">\n          <h1>Sudoku Solver</h1>\n          <div className=\"game-board\">\n            <div className=\"puzzle\" onContextMenu={(e) => e.preventDefault()}>\n              <h2>Puzzle</h2>\n              <Board\n                grid={this.state.grid}\n                bgColors={this.state.bgColors}\n                onClick={(r,c) => this.handleClick(r,c)}\n                onContextMenu={(r,c) => this.handleRightClick(r,c)}\n              />\n            </div>\n            <div className=\"solution\">\n              <h2>Solution</h2>\n              <Board\n                grid={this.state.solutionGrid}\n                bgColors={solutionBgColors}\n                onClick={() => {}}\n              />\n            </div>\n          </div>\n          <button className=\"button\" onClick={() => this.solve()} disabled={!this.state.valid}>Solve</button>\n          <button className=\"button\" onClick={() => this.reset()}>Reset</button>\n          <h2>{this.state.info}</h2>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <SudokuSolver />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}